var K = {}

var to = \convert, atype ->
	return \t ->
		var x = convert(t)
		if x
			return x
		return nil, 'be ' .. atype
		
		
K.str = to(tostring, 'a string')
K.num = to(tonumber, 'a number')
K.int = to(\t ->
	var i = tonumber(t)
	if i and math.floor(i) == i
		return i
, 'an integer')

-- Capitalize the first letter of the string.
K.capital = \str ->
	str = tostring(str)
	return string.gsub(str, "^%l", string.upper)

-- Trim whitespace in begin and end
K.trimmed = \str ->
	str = tostring(str)
	if #str > 200
		return str.gsub(@, "^%s+", "").reverse(@).gsub(@, "^%s+", "").reverse(@)
	else
		return string.match(str, "^%s*(.-)%s*$")
		

return K