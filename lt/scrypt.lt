-- FreeBSD
-- pkg install libscrypt
var ffi = require('ffi')

ffi.cdef(`
/* https://github.com/technion/libscrypt/blob/master/crypto_scrypt-hash.c  */
/*  returns +ve if succeed  */
int libscrypt_hash(char *crypted, const char* password, uint32_t N, uint8_t r, uint8_t p);

/* https://github.com/technion/libscrypt/blob/master/crypto_scrypt-check.c  */
/*  returns -ve if error, 0 if not match, else +ve  */
int libscrypt_check(char *crypted, const char *password);
`)

var cstrz = ffi.typeof("char[?]")
var const_cstrz = ffi.typeof("const char[?]")

var scrypt = ffi.load('scrypt')

-- https://github.com/technion/libscrypt/blob/master/libscrypt.h
var SCRYPT_MCF_LEN = 128
var SCRYPT_N = 16384
var SCRYPT_r = 8
var SCRYPT_p = 2  -- 16 takes too long

var K = {}

K.hash = \password ->
	if password
		var hashed = cstrz(SCRYPT_MCF_LEN)
		var pwd = const_cstrz(#password, password)
		if scrypt.libscrypt_hash(hashed, pwd, SCRYPT_N, SCRYPT_r, SCRYPT_p) > 0
			return ffi.string(hashed)


K.check = \hashed, password ->
	if hashed and password
		var gold = cstrz(#hashed, hashed)
		var sand = const_cstrz(#password, password)
		return scrypt.libscrypt_check(gold, sand) > 0


return K
