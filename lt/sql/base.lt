var json = require('cjson')

var map = {
	insert = "INSERT INTO "
	, update = "UPDATE "
	, delete = "DELETE FROM "
}


return \db, run ->

	var K = {
		run = run
	}

	-- https://github.com/openresty/lua-nginx-module#lua_socket_connect_timeout
	-- default 60s each for connect, send and read
	-- but unit here is in ms
	K.settimeouts = \connect, send, read ->
		db.settimeouts(@, connect, send, read)


	-- select multiple rows
	-- caller to test for result[1]
	K.select = \sql, ... ->
		var res, err, partial, count = run("SELECT " .. sql, ...)
		if res
			setmetatable(res, json.empty_array_mt)
		return res, err, partial, count

	-- insert, update, delete
	-- result can be {affected_rows=n, {...}} or true
	for k, v in pairs(map)
		K[k] = \sql, ... ->
			var res, err, partial, count = run(v .. sql, ...)
			if res and res == true
				res = {}
			return res, err, partial, count


	-- expect query returns only one row
	K.select1 = \sql, ... ->
		var res, err, partial, count = run("SELECT " .. sql, ...)
		return res and res[1], err, partial, count


	-- insert, update, delete
	-- result can be {affected_rows=n, {...}} or true
	for k, v in pairs(map)
		K[k .. '1'] = \sql, ... ->
			var res, err, partial, count = run(v .. sql, ...)
			if res
				if res == true
					res = {}
				else
					res = res[1]
			return res, err, partial, count


	return K
